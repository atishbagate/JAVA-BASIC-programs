----------------------------- Object Class Notes ------------------------------------

The fully qualified class name of Object class is -> java.lang.Object <-

Object is a built-in Class which is present in java.lang package belonging to JRE System Library. 

Object class is the supermost class in java, every class directly or indirectly extends from object class.

Object class contains 11 non-static functions

1]  public final java.lang.Class<?> getClass();
2]  public int hashCode();
3]  public boolean equals(java.lang.Object);
4]  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
5]  public java.lang.String toString();
6]  public final void notify();
7]  public final void notifyAll();
8]  public final void wait(long) throws java.lang.InterruptedException;
9]  public final void wait(long, int) throws java.lang.InterruptedException;
10] public final void wait() throws java.lang.InterruptedException;
11] protected void finalize() throws java.lang.Throwable;

3 important functions of java.lang.Object are 
------------------------------------------------------------------------------------
a] hashCode [public int hashCode()]

hashCode function returns a unique integer value which is generated by using the address of an object.
------------------------------------------------------------------------------------
b] equals  [public boolean equals(java.lang.Object)]

equals function is used to compare the hashCode values of the given two objects and return true if they are same else it return false.
------------------------------------------------------------------------------------
c] toString [public java.lang.String toString()]

this function is used to return the string representation of the object.
string representation is a combination of fully qualified class name with @ character and the hexadecimal value of hashCode of the object.
-----------------------------------------------------------------------------------
What happens when we print the ref var?
When an reference var is printed the print/println function uses the refVar and call the toString function of Object class which returns a string representation of the object.
